<tool id="create_sqlite_db" name="create_sqlite_db" version="0.0.1">
    <macros>
        <import>macros.xml</import>
    </macros>

    <expand macro="requirements">
        <!-- would ideally have xcms 3.0.0 but not available in bioconda at the point of tool creation-->
        <requirement type="package" version="1.46.0" >bioconductor-xcms</requirement>
	<requirement type="package" version="1.32.0">bioconductor-camera</requirement>
    </expand>

    <description>
        Create SQLite database of an XCMS-CAMERA dataset
    </description>
 <stdio>
        <exit_code range="1:" />
    </stdio>
    <command interpreter="Rscript"><![CDATA[
        create_sqlite_db.R
            --out_dir=.
            --xset_xa=$xset_xa
	    --pa=$pa
            --xcms_camera_option=$camera_xcms
            --cores=\${GALAXY_SLOTS:-4}
            #if $file_load_conditional.file_load_select=="yes"
                --mzML_files='
                #for $i in $file_load_conditional.input
                    $i,
                #end for
                '
                --galaxy_names='
                #for $i in $file_load_conditional.input
                    $i.name,
                #end for
                '
            #end if

            #if $eic
                --eic
            #end if
            #if $raw_rt_columns
                --raw_rt_columns
            #end if
            #if $grp_peaklist_opt.grp_peaklist_opt=="yes"
                --grp_peaklist=$grp_peaklist
            #end if

    ]]></command>
    <inputs>


        <param type="data" name="xset_xa" label="xcmsSet or CAMERA object"
               help="Either xcmsSet object saved as 'xset' or CAMERA 'xa' object in an RData file. Please
                     specify which to use below" format="rdata.xcms.raw,rdata.xcms.group,rdata.xcms.retcor,rdata.xcms.fillpeaks,rdata.camera.quick,rdata.camera.positive,rdata.camera.negative,rdata"/>
        <expand macro="camera_xcms" />

        <param type="data" name="pa" label="purityA object" format="rdata"
               help="purityA object saved as 'pa' in a RData file (output from assess_purity_msms)"/>

	<param name="eic" type="boolean" label="Include EIC data?"
               help="The Extracted Ion Chromatogram can be calculated for each peak and stored in
                     the database. Note, this will take considerable some time for large datasets and
                     the resulting SQLite database can be large"/>
	
	<param name="raw_rt_columns" type="boolean" label="Use user defined Raw RT columns?"
               help="Only use if the track_rt_raw tool has been used"/>


        <expand macro="grp_peaklist" />


        <expand macro="fileload" />

    </inputs>
    <outputs>
        <data name="lcms_data_sqlite" format="sqlite" label="${tool.name} on ${on_string}: LC-MS(/MS) data SQLite db"
              from_work_dir="lcms_data.sqlite" visible="true"/>
    </outputs>
    <tests>
        <test>
            <conditional name="file_load_conditional">
                <param name="file_load_select" value="yes"/>
                <param name="input" >
                    <collection type="list">
                        <element name="LCMS_1.mzML" value="LCMS_1.mzML"/>
                        <element name="LCMS_2.mzML" value="LCMS_2.mzML"/>
                        <element name="LCMSMS_1.mzML" value="LCMSMS_1.mzML"/>
                        <element name="LCMSMS_2.mzML" value="LCMSMS_2.mzML"/>
                    </collection>
                </param>
            </conditional>
	    <param name="camera_xcms" value="xcms"/>
            <param name="xset_xa" value="LCMS_1_LCMS_2_LCMSMS_1_LCMSMS_2.xset.group.rdata"/>
            <param name="pa" value="frag4feature.rdata"/>
            <output name="lcms_data_sqlite" value="lcms_data.sqlite" >
            </output>
        </test>
    </tests>
    <expand macro="citations" />
    <help><![CDATA[
=============================================================
Create SQLite database for LC-MS(/MS) dataset
=============================================================

-----------
Output
-----------
* lcms_sqlite: An SQLite database of the LC-MS(/MS) data (including fragmentation scans)


    ]]></help>

</tool>
