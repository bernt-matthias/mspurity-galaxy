<tool id="dims_anticipated_purity" name="Calculate anticipated precursor ion purity (DIMS)" version="0.1.0">
    <requirements>
        <requirement type="package" >R</requirement>
	    <requirement type="package" >r-optparse</requirement>
        <requirement type="package" >msPurity</requirement>
    </requirements>
    <description>Calculate the anticipated precursor ion purity from a DIMS dataset.
    </description>

    <stdio>
        <exit_code range="1:" />
    </stdio>
    <command interpreter="Rscript"><![CDATA[
        dimsPredictPurity.R
                --mzML_file=$mzML_file
                --mzs=$mzs
                --out_dir=.
                --minOffset=$minoffset
                --maxOffset=$maxoffset
                --ppm=$ppm
                --iwNorm=$iw_norm
                #if $sim is True
                    --sim
                #end if
    ]]></command>
    <inputs>
        <param type="data" name="mzML_file"
                help="mzML file to calculate metric from (--mzML_file)"/>
        <param type="data" name="mzs"
                help="file with list of mz values to check (--mzs)"/>
        <param name="minoffset" type="float" label="minoffset" value="0.5"
                    help="Offset to the 'left' for the precursor range e.g. if precursor of interest is
                    100.0 then the range would be from 999.5 to 100.0 (--minoffset)"/>
        <param name="maxoffset" type="float" label="maxoffset" value="0.5"
                    help="Offset to the 'right' for the precursor range  e.g. if precursor of interest is
                    100.0 then the range would be from 100.0 to 100.5 (--maxoffset)"/>
        <param name="ppm" type="float" label="ppm tolerance" value="4"
                    help="ppm tolerance for the precursor to be found within the mzML file (--ppm)"/>
        <param name="sim" type="boolean" label="SIM-Stitch experiment?" help=""/>
        <param name="iw_norm" type="select" label="Normalisation for isolation efficiency">
                <option value="gauss" >Gaussian</option>
                <option value="rcosine" >Raised cosine</option>
                <option value="QE5"> Calculated from Q-Exactive for +/- 0.5 Da windows </option>
                <option value="none" selected="true" >No normalisation</option>
        </param>

    </inputs>
    <outputs>
	    <data name="anticipated_dims_purity.txt" format="tabular" label="anticipated_dims_purity.txt"
              from_work_dir="anticipated_dims_purity.txt" visible="true"/>
    </outputs>
    <tests>
        <test>
            <param name="mzML_file" value="SIMstitch_data.mzML" type="data"  />
            <param name="mzs" type="tabular"  help="file with list of mz values to check (--mzs)"/>
            <output name="anticipated_dims_purity.txt" type="tabular" file="anticipated_dims_purity.txt">
                <assert_contents>
                    <has_n_columns n="" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[

=======================================
Flag & remove peaks from xcmsSet object
=======================================
-----------
Description
-----------

Tool to flag XCMS grouped peaks based on various criteria (e.g RSD, intensity). The flagged grouped peaks can then be removed
completely from the xcmsSet object (xset). This means removing the individual peaks associated for each file. Located
in the **xset@peaks** socket of the xcmsSet object.

Additionally a list of ids of the xcms grouped peaks can be supplied, all peaks associated with these ids can be
be removed.

**Note**: grouped peak refers to a peak that has been grouped together by xcms::group function

-----------------
Updated peaklist
-----------------
The calculated columns for the update peaklist dataframe include:

* RSD of intensity for grouped peaks across each class
* RSD of retention time for grouped peaks across each class
* Coverage across all classes
* mzmin_full & mzmax_full: the full mzrange of each grouped peak
* rtmin_full & rtmax_full: the full rtrange of each grouped peak
* flag for criteria for the blank class (if 1 it means the blank is valid) and this grouped peak will be removed
* flag for criteria for the sample classes (if 1 it means that this grouped peak is valid for this class)
* all_sample_valid: flag for all samples (if 1 it means that at least 1 sample class is valid and the blank is not valid) (we keep the grouped peak)

This is in addition to the standard output from the xcmsSet peaklist

**flag example**

Dataset consists of 3 classes. Blank, cond1 and cond2. The classes cond1 and cond2 are biological sample classes.

============= ============= ============= ================ ================
blank_valid   cond1_valid   cond2_valid   all_sample_valid Keep peak?
============= ============= ============= ================ ================
0             0             1             1                Yes
------------- ------------- ------------- ---------------- ----------------
0             1             1             1                Yes
------------- ------------- ------------- ---------------- ----------------
1             0             1             0                No
------------- ------------- ------------- ---------------- ----------------
1             0             0             0                No
------------- ------------- ------------- ---------------- ----------------
0             0             0             0                No
============= ============= ============= ================ ================



-----------------
Filters for flags
-----------------

The following filters can be used to determine if a grouped peak gets flagged to keep. If the column all_sample_valid is 0 then
the grouped peak will be removed


* RSD of intensity for each biological sample class
* minfrac for each biological sample class
* RSD of retention time for each biological sample class
* intensity threshold for each biological sample class
* Blank subtraction. If a blank peak is found where the intensity of any corresponding biological sample class is not greater that the he s2b threshold (sample/blank). Then this grouped peak will be flagged for removal

The blank grouped peaks also have there own filters. If the blank peak passes this criteria and s2b threshold detailed above
then the peak will be removed.

* RSD of intensity
* minfrac
* intensity threshold

Additionally there is a filter for assessing how well the peaks fit the gaussian shape. Note that this can only be performed
when XCMS has fit_gauss option and verbose columns set to TRUE. Also, these peaks are just removed and not flagged.



-----------
Regrouping
-----------
The resulting xcmsSet object where all peaks have been removed needs to be regrouped otherwise the individual peaks
associated with each file will not be correctly linked to the grouped peaks.

This tool will re-group the xcmsSet object and check the newly created re-grouped xcmsSet object to see if any peaks are
still being flagged. If so the process will be repeated untill the xcmsSet object only contains peaks that match
the peak criteria.

The output file is an xcmsSet.RData file.
    ]]></help>
</tool>